{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegistrationComponent {\n  onSubmit() {\n    console.log('Registration form submitted!');\n    console.log(`Name: ${this.name}`);\n    console.log(`Email: ${this.email}`);\n    console.log(`Password: ${this.password}`);\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)();\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration-form\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"label\");\n      i0.ɵɵtext(2, \" Name: \");\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"label\");\n      i0.ɵɵtext(6, \" Email: \");\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\");\n      i0.ɵɵtext(10, \" Password: \");\n      i0.ɵɵelementStart(11, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,qBAAqB;EAKhCC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CD,OAAO,CAACC,GAAG,CAAC,SAAS,IAAI,CAACC,IAAI,EAAE,CAAC;IACjCF,OAAO,CAACC,GAAG,CAAC,UAAU,IAAI,CAACE,KAAK,EAAE,CAAC;IACnCH,OAAO,CAACC,GAAG,CAAC,aAAa,IAAI,CAACG,QAAQ,EAAE,CAAC;EAC3C;;AAVWN,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPlCC,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACzBD,6BAAO;MAACA,uBAAM;MAAAA,gCAA2D;MAAxCA;QAAA;MAAA,EAAkB;MAArCA,iBAA2D;MAEzEA,qBAAI;MACJA,6BAAO;MAACA,wBAAO;MAAAA,gCAA8D;MAA1CA;QAAA;MAAA,EAAmB;MAAvCA,iBAA8D;MAE7EA,qBAAI;MACJA,6BAAO;MAACA,4BAAU;MAAAA,iCAAuE;MAAhDA;QAAA;MAAA,EAAsB;MAA7CA,iBAAuE;MAEzFA,sBAAI;MACJA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MATJA,eAAkB;MAAlBA,kCAAkB;MAGhBA,eAAmB;MAAnBA,mCAAmB;MAGbA,eAAsB;MAAtBA,sCAAsB","names":["RegistrationComponent","onSubmit","console","log","name","email","password","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\justyna.kozuch\\Documents\\TicketApp\\ClientApp\\src\\app\\user\\registration\\registration.component.ts","C:\\Users\\justyna.kozuch\\Documents\\TicketApp\\ClientApp\\src\\app\\user\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  name: string | undefined;\n  email: string | undefined;\n  password: string | undefined;\n\n  onSubmit() {\n    console.log('Registration form submitted!');\n    console.log(`Name: ${this.name}`);\n    console.log(`Email: ${this.email}`);\n    console.log(`Password: ${this.password}`);\n  }\n}\n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { UserService } from 'src/app/shared/user.service';\n\n// @Component({\n//   selector: 'app-registration',\n//   templateUrl: './registration.component.html',\n//   styleUrls: ['./registration.component.css']\n// })\n// export class RegistrationComponent implements OnInit {\n//   constructor(public service: UserService) { }\n\n//   ngOnInit(){\n\n//   }\n// }\n","<form (ngSubmit)=\"onSubmit()\">\n    <label> Name: <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" required>\n    </label>\n    <br>\n    <label> Email: <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n    </label>\n    <br>\n    <label> Password: <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </label>\n    <br>\n    <button type=\"submit\">Submit</button>\n  </form>\n\n\n\n\n\n<!-- <div class=\"row mt-4\">\n    <div class=\"col-md-6\">\n        <div class=\"row\" style=\"height: 450px;\">\n            <div class=\"col-md-12 my-auto side-header\">\n                <img style=\"width: 130px;\"src=\"/assets/img/adduser.png\" alt=\"Add user image.\" class=\"mx-auto d-block\">\n                <h1 style=\"text-align: center;\">User Registration</h1>\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n        <form [formGroup]=\"service.formModel\" autocomplete=\"off\">\n        <div class=\"form-group required\">\n            <label>First Name</label>\n            <input class=\"form-control\" formControlName=\"FirstName\">\n            <label class=\"text-danger\" *ngIf=\"service.formModel.get('FirstName')?.touched && service.formModel.get('FirstName')?.errors?.required\">This field is mandatory.</label>\n        </div>\n        <div class=\"form-group required\">\n            <label>Last Name</label>\n            <input class=\"form-control\" formControlName=\"LastName\">\n            <label class=\"text-danger\" *ngIf=\"service.formModel.get('LastName')?.touched && service.formModel.get('LastName')?.errors?.required\">This field is mandatory.</label>\n        </div>\n        <div class=\"form-group required\">\n            <label>Email</label>\n            <input class=\"form-control\" formControlName=\"Email\">\n            <label class=\"text-danger\" *ngIf=\"service.formModel.get('Email')?.touched && service.formModel.get('Email')?.errors?.required\">This field is mandatory.</label>\n            <label class=\"text-danger\" *ngIf=\"service.formModel.get('Email')?.touched && service.formModel.get('Email')?.errors?.email\">Invalid email address.</label>\n        </div>\n        <div formGroupName=\"Passwords\">\n            <div class=\"form-group required\">\n                <label>Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"Password\">\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password')?.touched && service.formModel.get('Passwords.Password')?.errors?.required\">This field is mandatory.</label>\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password')?.touched && service.formModel.get('Passwords.Password')?.errors?.minLength\">Minimum 8 characters required.</label>\n            </div>\n            <div class=\"form-group required\">\n                <label>Confirm Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword')?.touched && service.formModel.get('Passwords.ConfirmPassword')?.errors?.required\">This field is mandatory.</label>\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword')?.touched && service.formModel.get('Passwords.ConfirmPassword')?.errors?.passwordMismatch\">Corfirm password does not match.</label>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md8 offset-md-2\">\n                <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!service.formModel.valid\">Sign Up</button>\n            </div>\n        </div>\n    </form>\n    </div>\n    \n</div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}